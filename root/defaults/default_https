server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    http2 on;

    root WEBDIR;
    index index.html index.htm index.php;

    keepalive_requests    10;
    keepalive_timeout     60 60;

    server_name _https;

    charset utf-8;

    ssl_certificate CERTFILE;
    ssl_certificate_key PKEYFILE;

    ##
    # SSL Defaults
    ##

    ### Mozilla Recommendations
    ## https://ssl-config.mozilla.org/#server=nginx&version=1.24.0&config=intermediate&openssl=3.1.1&guideline=5.7

    # Enables a shared SSL cache with size that can hold around 8000 sessions.
    # Default is 'none'.
    ssl_session_cache shared:SSL:10m;

    # Specifies a time during which a client may reuse the session parameters.
    # Default is '5m'.
    ssl_session_timeout 10m;

    # Enables the specified protocols. Default is TLSv1 TLSv1.1 TLSv1.2.
    # TIP: If you're not obligated to support ancient clients, remove TLSv1.1.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

    # Path of the file with Diffie-Hellman parameters for EDH ciphers.
    # TIP: Generate with: `openssl dhparam -out /etc/ssl/nginx/dh2048.pem 2048`
    # or get from Mozilla with
    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    # ssl_dhparam /etc/ssl/nginx/dh2048.pem;

    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    # Specifies that our cipher suits should be preferred over client ciphers.
    # Default is 'off'.
    ssl_prefer_server_ciphers on;

    # Disable TLS session tickets (they are insecure). Default is 'on'.
    ssl_session_tickets off;

    # OCSP stapling
    #ssl_stapling on;
    #ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate CERTFILE;

    error_page 404 /404.html;
    location = /404.html { root   /usr/share/nginx/html; }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html { root   /usr/share/nginx/html; }

    client_max_body_size 0;

    location / { try_files $uri $uri/ /index.php$is_args$args; }

    # Deny access to the directory data
    location ~* /data {
        deny all;
        return 404;
    }
    location ~* ^.+\.(log|sqlite)$ { return 404; }
    location ~ /\.ht { return 404; }
    location ~* ^.+\.(ico|jpg|gif|png|css|js|svg|eot|ttf|woff|woff2|otf)$ {
        log_not_found off;
        expires 7d;
        etag on;
    }

    location ~ \.php$ {
        # Prevents autofixing of path which could be used for exploit
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # With php5-cgi alone:
        # fastcgi_pass 127.0.0.1:9000;
        # With php5-fpm:
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SERVER_NAME $host;

        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
    }
}
